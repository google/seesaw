// Copyright 2020 Google Inc. All Rights Reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.7.1
// source: seesaw.proto

package seesaw

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// High-Availability states for a Seesaw Node.
type HaState int32

const (
	// State of the node could not be determined.
	HaState_UNKNOWN HaState = 0
	// Node is in a ready but non-serving state.
	HaState_BACKUP HaState = 1
	// Node is disabled, will not serve traffic.
	HaState_DISABLED HaState = 2
	// Node is in a failure state.
	HaState_ERROR HaState = 3
	// Node is in an active and serving state.
	HaState_LEADER HaState = 4
	// Node is in shutdown state and will stop serving requests.
	HaState_SHUTDOWN HaState = 5
)

// Enum value maps for HaState.
var (
	HaState_name = map[int32]string{
		0: "UNKNOWN",
		1: "BACKUP",
		2: "DISABLED",
		3: "ERROR",
		4: "LEADER",
		5: "SHUTDOWN",
	}
	HaState_value = map[string]int32{
		"UNKNOWN":  0,
		"BACKUP":   1,
		"DISABLED": 2,
		"ERROR":    3,
		"LEADER":   4,
		"SHUTDOWN": 5,
	}
)

func (x HaState) Enum() *HaState {
	p := new(HaState)
	*p = x
	return p
}

func (x HaState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HaState) Descriptor() protoreflect.EnumDescriptor {
	return file_seesaw_proto_enumTypes[0].Descriptor()
}

func (HaState) Type() protoreflect.EnumType {
	return &file_seesaw_proto_enumTypes[0]
}

func (x HaState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *HaState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = HaState(num)
	return nil
}

// Deprecated: Use HaState.Descriptor instead.
func (HaState) EnumDescriptor() ([]byte, []int) {
	return file_seesaw_proto_rawDescGZIP(), []int{0}
}

var File_seesaw_proto protoreflect.FileDescriptor

var file_seesaw_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x65, 0x73, 0x61, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x55,
	0x0a, 0x07, 0x48, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4c,
	0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x48, 0x55, 0x54, 0x44,
	0x4f, 0x57, 0x4e, 0x10, 0x05, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x73, 0x65, 0x65, 0x73, 0x61,
	0x77, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x65, 0x73, 0x61, 0x77,
}

var (
	file_seesaw_proto_rawDescOnce sync.Once
	file_seesaw_proto_rawDescData = file_seesaw_proto_rawDesc
)

func file_seesaw_proto_rawDescGZIP() []byte {
	file_seesaw_proto_rawDescOnce.Do(func() {
		file_seesaw_proto_rawDescData = protoimpl.X.CompressGZIP(file_seesaw_proto_rawDescData)
	})
	return file_seesaw_proto_rawDescData
}

var file_seesaw_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_seesaw_proto_goTypes = []interface{}{
	(HaState)(0), // 0: HaState
}
var file_seesaw_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_seesaw_proto_init() }
func file_seesaw_proto_init() {
	if File_seesaw_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_seesaw_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_seesaw_proto_goTypes,
		DependencyIndexes: file_seesaw_proto_depIdxs,
		EnumInfos:         file_seesaw_proto_enumTypes,
	}.Build()
	File_seesaw_proto = out.File
	file_seesaw_proto_rawDesc = nil
	file_seesaw_proto_goTypes = nil
	file_seesaw_proto_depIdxs = nil
}
