syntax = "proto3";

option go_package = "github.com/google/seesaw/pb/ecu";

// package is necessary to tell grpc to generate a service name with package
// name.
package ecu;

// The SeesawECU service definition
service SeesawECU {
  // Calling Failover() on any of the LB instance triggers a switch of master.
  rpc Failover(FailoverRequest) returns(FailoverResponse) {}

  // Returns SeesawStats.
  rpc GetStats(GetStatsRequest) returns(SeesawStats) {}

  // Updates fluent-bit configuration and restarts it if needed.
  rpc UpdateFluentBit(UpdateFluentBitRequest) returns(UpdateFluentBitResponse) {}
}

// Request for failover.
message FailoverRequest {}

// Response for failover.
message FailoverResponse {}

message GetStatsRequest {}

// SeesawStats includes stats that are interested by syllogi.
message SeesawStats {
  // Hostname of the instance.
  string hostname = 1;

  // HAState reported by Seesaw. It's the protobuffer equivalent of Seesaw.HAState.
  enum HAState {
    HA_UNKNOWN = 0;
    HA_BACKUP = 1;
    HA_DISABLED = 2;
    HA_ERROR = 3;
    HA_MASTER = 4;
    HA_SHUTDOWN = 5;
  }
  HAState ha_state = 2;

   // If current instance is ready to serve traffic.
  Readiness readiness = 3;

  string fluent_bit_error = 4;
}

message Readiness {
  bool is_ready = 1;
  // A string message decribing why it's not ready.
  // Not filled if ready.
  // For logging and debugging purpose.
  string reason = 2;
}

// UpdateFluentBitRequest holds raw file contents of configs related to fluent-bit.
message UpdateFluentBitRequest {
  string fluent_bit_cfg = 1;
  string sa_key = 2;
  string proxy_env = 3;
}

message UpdateFluentBitResponse {}